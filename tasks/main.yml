# Standards: 1.2
---
- name: Create system group
  when:
    - alertmanager_installation == 'native'
  group:
    name: alertmanager
    system: True
    state: present
  tags:
    - alertmanager

- name: Create system user
  when:
    - alertmanager_installation == 'native'
  user:
    name: alertmanager
    group: alertmanager
    password: "!"
    shell: /usr/sbin/nologin
    home: /var/lib/alertmanager
    create_home: False
    system: True
    state: present
  tags:
    - alertmanager

- name: Create required directories
  loop: "{{ alertmanager_default_folders + alertmanager_extra_folders }}"
  file:
    path: "{{ item }}"
    owner: "{{ 'alertmanager' if alertmanager_installation == 'native' else 'nobody' }}"
    group: "{{ 'alertmanager' if alertmanager_installation == 'native' else 'nogroup' }}"
    mode: u=rwx,g=rx,o=rx
    state: directory
  tags:
    - alertmanager

- name: Check existing install
  when:
    - alertmanager_installation == 'native'
  register: alertmanager_version_check
  failed_when: False
  changed_when: False
  check_mode: False
  shell: /usr/bin/alertmanager --version 2>&1
  tags:
    - alertmanager

- name: Fact version change
  when:
    - alertmanager_installation == 'native'
  set_fact:
    alertmanager_version_changed: "{{ alertmanager_version_check.rc != 0 or (alertmanager_version_check.stdout_lines is defined and alertmanager_version not in alertmanager_version_check.stdout_lines[0]) | bool }}"
  tags:
    - alertmanager

- name: Download release tarball
  when:
    - alertmanager_installation == 'native'
    - alertmanager_version_changed
  notify:
    - Restart alertmanager
  unarchive:
    src: "{{ alertmanager_download }}"
    dest: /usr/local/src
    remote_src: True
    owner: root
    group: root
  tags:
    - alertmanager

- name: Copy downloaded binaries
  when:
    - alertmanager_installation == 'native'
    - alertmanager_version_changed
    - not ansible_check_mode
  notify:
    - Restart alertmanager
  loop:
    - alertmanager
    - amtool
  copy:
    src: "/usr/local/src/alertmanager-{{ alertmanager_version }}.linux-amd64/{{ item }}"
    dest: "/usr/bin/{{ item }}"
    remote_src: True
    owner: root
    group: root
    mode: u=rwx,g=rx,o=rx
  tags:
    - alertmanager

- name: Write general config
  notify:
    - Restart alertmanager
  template:
    src: config.j2
    dest: /etc/alertmanager/config.yml
    owner: "{{ 'alertmanager' if alertmanager_installation == 'native' else 'nobody' }}"
    group: "{{ 'alertmanager' if alertmanager_installation == 'native' else 'nogroup' }}"
    mode: u=rw,g=r,o=r
  tags:
    - alertmanager

- name: Write default config
  notify:
    - Restart alertmanager
  template:
    src: default.j2
    dest: /etc/default/alertmanager
    owner: root
    group: root
    mode: u=rw,g=r,o=r
  tags:
    - alertmanager

- name: Write service file
  notify:
    - Restart alertmanager
  template:
    src: service.j2
    dest: /etc/systemd/system/alertmanager.service
    owner: root
    group: root
    mode: u=rw,g=r,o=r
  tags:
    - alertmanager

- name: Start alertmanager service
  systemd:
    name: alertmanager
    state: started
    daemon_reload: True
    masked: False
    enabled: True
  tags:
    - alertmanager

- name: Remove install directory
  when:
    - alertmanager_installation == 'native'
  file:
    path: "/usr/local/src/alertmanager-{{ alertmanager_version }}.linux-amd64"
    state: absent
  tags:
    - alertmanager

- name: Include oauth2 tasks
  when: alertmanager_oauth2_enabled | default(False)
  include_tasks: oauth2.yml
  tags:
    - alertmanager
    - oauth2

...
